---
// Hero Section - Kenkomed
// Componente Astro con Three.js y mockup 3D
---

<section id="inicio" class="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950">
  
  <!-- Three.js Canvas para elementos médicos 3D -->
  <canvas id="three-canvas" class="absolute inset-0 z-0"></canvas>

  <!-- Updated gradient overlay with logo colors -->
  <div class="absolute inset-0 bg-gradient-to-t from-slate-950/90 via-slate-900/50 to-slate-950/60 z-[2]"></div>

  <!-- Updated grid pattern with logo teal color -->
  <div class="absolute inset-0 z-[1] opacity-15">
    <div class="absolute inset-0 bg-[linear-gradient(rgba(45,155,142,0.05)_1px,transparent_1px),linear-gradient(90deg,rgba(45,155,142,0.05)_1px,transparent_1px)] bg-[size:50px_50px]"></div>
  </div>

  <!-- Main Content Container -->
  <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
    <div class="grid lg:grid-cols-2 gap-12 lg:gap-16 items-center">
      
      <!-- Left Column - Text Content -->
      <div class="text-white space-y-8">
        
        <!-- Updated badge with logo teal color -->
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-teal-500/10 border border-teal-400/30 backdrop-blur-sm animate-fade-in-up">
          <div class="relative">
            <div class="w-2 h-2 bg-teal-400 rounded-full"></div>
            <div class="absolute inset-0 w-2 h-2 bg-teal-400 rounded-full animate-ping"></div>
          </div>
          <span class="text-sm font-medium text-teal-300">Sistema DSS Avanzado</span>
        </div>

        <!-- Main Heading -->
        <div class="space-y-4 animate-fade-in-up" style="animation-delay: 0.1s;">
          <h1 class="text-5xl sm:text-6xl lg:text-7xl font-black leading-tight">
            <!-- Updated gradient with logo colors -->
            <span class="block bg-gradient-to-r from-white via-teal-100 to-blue-100 bg-clip-text text-transparent">
              Kenkomed
            </span>
          </h1>
          <p class="text-2xl sm:text-3xl font-light text-slate-200">
            Digitaliza tu centro de kinesiología
          </p>
        </div>

        <!-- Description -->
        <p class="text-lg text-slate-300 leading-relaxed max-w-xl animate-fade-in-up" style="animation-delay: 0.2s;">
          Sistema de Soporte a la Decisión Clínica que optimiza el seguimiento personalizado de pacientes y mejora la calidad de atención con <span class="text-teal-300 font-semibold">registros médicos digitales completos</span>.
        </p>

        <!-- Features Mini List -->
        <div class="flex flex-wrap gap-4 animate-fade-in-up" style="animation-delay: 0.3s;">
          <div class="flex items-center gap-2 text-sm text-slate-300">
            <!-- Updated checkmark color to logo teal -->
            <svg class="w-5 h-5 text-teal-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <span>100% Seguro</span>
          </div>
          <div class="flex items-center gap-2 text-sm text-slate-300">
            <svg class="w-5 h-5 text-teal-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <span>Fácil implementación</span>
          </div>
          <div class="flex items-center gap-2 text-sm text-slate-300">
            <svg class="w-5 h-5 text-teal-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <span>Soporte 24/7</span>
          </div>
        </div>

        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 animate-fade-in-up" style="animation-delay: 0.4s;">
          <!-- Updated button gradient with logo colors -->
          <a href="/demo" class="group relative overflow-hidden bg-gradient-to-r from-blue-600 to-teal-600 hover:from-blue-500 hover:to-teal-500 text-white px-8 py-4 rounded-xl font-semibold text-lg transition-all duration-300 hover:scale-105 hover:shadow-2xl hover:shadow-teal-500/30 inline-flex items-center justify-center gap-2">
            <span>Ver Demo en Vivo</span>
            <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
            </svg>
          </a>
          
          <button class="group relative bg-white/5 hover:bg-white/10 backdrop-blur-sm border border-white/10 hover:border-teal-400/30 text-white px-8 py-4 rounded-xl font-semibold text-lg transition-all duration-300 hover:scale-105">
            Solicitar Información
          </button>
        </div>

      </div>

      <!-- Right Column - Mockup 3D -->
      <div class="relative lg:block animate-fade-in-up" style="animation-delay: 0.2s;">
        <div class="mockup-container animate-float">
          
          <!-- Updated glow effects with logo colors -->
          <div class="absolute -inset-4 bg-gradient-to-r from-blue-600/20 to-teal-600/20 rounded-3xl blur-3xl"></div>
          
          <!-- Mockup Screen -->
          <div class="mockup-screen relative bg-slate-900 rounded-2xl overflow-hidden border border-white/10">
            
            <!-- Browser Chrome -->
            <div class="bg-slate-800 px-4 py-3 flex items-center gap-2 border-b border-white/5">
              <div class="flex gap-2">
                <div class="w-3 h-3 rounded-full bg-red-500/80"></div>
                <div class="w-3 h-3 rounded-full bg-yellow-500/80"></div>
                <div class="w-3 h-3 rounded-full bg-green-500/80"></div>
              </div>
              <div class="flex-1 mx-4 bg-slate-900/50 rounded px-3 py-1 text-xs text-slate-400">
                kenkomed.app/dashboard
              </div>
            </div>

            <!-- Mockup Content -->
            <div class="p-6 space-y-4 bg-gradient-to-br from-slate-900 to-slate-800">
              
              <!-- Header -->
              <div class="flex items-center justify-between">
                <div>
                  <h3 class="text-white font-semibold text-lg">Panel de Pacientes</h3>
                  <p class="text-slate-400 text-sm">Gestión integral de historias clínicas</p>
                </div>
                <!-- Updated icon background to logo blue -->
                <div class="w-10 h-10 rounded-full bg-blue-600 flex items-center justify-center">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                  </svg>
                </div>
              </div>

              <!-- Stats Cards -->
              <div class="grid grid-cols-3 gap-3">
                <!-- Updated stat card colors to logo colors -->
                <div class="bg-slate-800/50 backdrop-blur border border-white/5 rounded-lg p-3">
                  <div class="text-2xl font-bold text-blue-400">247</div>
                  <div class="text-xs text-slate-400">Pacientes</div>
                </div>
                <div class="bg-slate-800/50 backdrop-blur border border-white/5 rounded-lg p-3">
                  <div class="text-2xl font-bold text-teal-400">18</div>
                  <div class="text-xs text-slate-400">Hoy</div>
                </div>
                <div class="bg-slate-800/50 backdrop-blur border border-white/5 rounded-lg p-3">
                  <div class="text-2xl font-bold text-teal-400">94%</div>
                  <div class="text-xs text-slate-400">Mejora</div>
                </div>
              </div>

              <!-- Patient List -->
              <div class="space-y-2">
                <!-- Updated patient card colors to logo colors -->
                <div class="bg-blue-600/10 border border-blue-500/20 rounded-lg p-3 flex items-center gap-3">
                  <div class="w-10 h-10 rounded-full bg-gradient-to-br from-blue-400 to-teal-500"></div>
                  <div class="flex-1">
                    <div class="text-white text-sm font-medium">María González</div>
                    <div class="text-slate-400 text-xs">Última sesión: Hoy 10:30</div>
                  </div>
                  <div class="w-2 h-2 rounded-full bg-teal-400"></div>
                </div>

                <div class="bg-slate-800/30 border border-white/5 rounded-lg p-3 flex items-center gap-3 opacity-70">
                  <div class="w-10 h-10 rounded-full bg-gradient-to-br from-teal-400 to-blue-500"></div>
                  <div class="flex-1">
                    <div class="text-white text-sm font-medium">Carlos Ruiz</div>
                    <div class="text-slate-400 text-xs">Próxima: Mañana 15:00</div>
                  </div>
                </div>

                <div class="bg-slate-800/30 border border-white/5 rounded-lg p-3 flex items-center gap-3 opacity-70">
                  <div class="w-10 h-10 rounded-full bg-gradient-to-br from-teal-400 to-blue-500"></div>
                  <div class="flex-1">
                    <div class="text-white text-sm font-medium">Ana Martínez</div>
                    <div class="text-slate-400 text-xs">Evolución: Excelente</div>
                  </div>
                </div>
              </div>

            </div>
          </div>

          <!-- Updated floating elements colors to logo colors -->
          <div class="absolute -top-6 -right-6 w-24 h-24 bg-teal-500/20 rounded-full blur-2xl animate-pulse"></div>
          <div class="absolute -bottom-6 -left-6 w-32 h-32 bg-blue-500/20 rounded-full blur-2xl animate-pulse" style="animation-delay: 1s;"></div>
        </div>
      </div>

    </div>
  </div>

  <!-- Scroll Indicator -->
  <div class="absolute bottom-8 left-1/2 -translate-x-1/2 z-10 animate-bounce">
    <div class="w-6 h-10 rounded-full border-2 border-white/30 flex items-start justify-center p-2">
      <div class="w-1 h-3 bg-white/50 rounded-full"></div>
    </div>
  </div>

</section>

<style>
  .mockup-container {
    perspective: 1500px;
    transform-style: preserve-3d;
  }

  /* Reduced rotation angles for calmer animation */
  .mockup-screen {
    transform: rotateY(-8deg) rotateX(2deg);
    transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .mockup-screen:hover {
    transform: rotateY(-5deg) rotateX(1deg) translateZ(15px);
  }

  /* Reduced float distance for calmer animation */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-12px); }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(40px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Slower float animation for calmer effect */
  .animate-float {
    animation: float 8s ease-in-out infinite;
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;
  }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

<script is:inline>
  // Wait for THREE to be loaded
  window.addEventListener('DOMContentLoaded', () => {
    const canvas = document.getElementById('three-canvas');
    if (!canvas || typeof THREE === 'undefined') return;

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true, antialias: true });
    
    renderer.setSize(window.innerWidth, window.innerHeight);
    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
    camera.position.z = 5;

    // Create medical-themed geometric shapes
    const geometry1 = new THREE.IcosahedronGeometry(0.5, 0);
    const geometry2 = new THREE.OctahedronGeometry(0.4, 0);
    const geometry3 = new THREE.TetrahedronGeometry(0.3, 0);

    const material1 = new THREE.MeshPhongMaterial({ 
      color: 0x1B75BC, // Logo blue
      wireframe: true,
      transparent: true,
      opacity: 0.25
    });
    
    const material2 = new THREE.MeshPhongMaterial({ 
      color: 0x2D9B8E, // Logo teal
      wireframe: true,
      transparent: true,
      opacity: 0.2
    });

    const material3 = new THREE.MeshPhongMaterial({ 
      color: 0x1B75BC, // Logo blue
      wireframe: true,
      transparent: true,
      opacity: 0.15
    });

    const shapes = [];
    
    for (let i = 0; i < 6; i++) {
      let mesh;
      if (i % 3 === 0) {
        mesh = new THREE.Mesh(geometry1, material1);
      } else if (i % 3 === 1) {
        mesh = new THREE.Mesh(geometry2, material2);
      } else {
        mesh = new THREE.Mesh(geometry3, material3);
      }
      
      mesh.position.x = (Math.random() - 0.5) * 10;
      mesh.position.y = (Math.random() - 0.5) * 10;
      mesh.position.z = (Math.random() - 0.5) * 5;
      
      scene.add(mesh);
      shapes.push(mesh);
    }

    const light1 = new THREE.DirectionalLight(0x1B75BC, 0.8); // Logo blue, reduced intensity
    light1.position.set(1, 1, 1);
    scene.add(light1);

    const light2 = new THREE.DirectionalLight(0x2D9B8E, 0.4); // Logo teal, reduced intensity
    light2.position.set(-1, -1, -1);
    scene.add(light2);

    const ambientLight = new THREE.AmbientLight(0xffffff, 0.2);
    scene.add(ambientLight);

    // Animation
    let mouseX = 0;
    let mouseY = 0;

    document.addEventListener('mousemove', (event) => {
      mouseX = (event.clientX / window.innerWidth) * 2 - 1;
      mouseY = -(event.clientY / window.innerHeight) * 2 + 1;
    });

    function animate() {
      requestAnimationFrame(animate);

      shapes.forEach((shape, index) => {
        shape.rotation.x += 0.0005 * (index + 1);
        shape.rotation.y += 0.0005 * (index + 1);
        
        shape.position.x += (mouseX * 0.3 - shape.position.x) * 0.001;
        shape.position.y += (mouseY * 0.3 - shape.position.y) * 0.001;
      });

      renderer.render(scene, camera);
    }

    animate();

    // Handle resize
    window.addEventListener('resize', () => {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    });
  });
</script>
